from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, WebAppInfo, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os
import random

TOKEN = os.getenv("BOT_TOKEN")

# === /date ===
async def date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.type == "private":
        keyboard = [
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å",
                                  web_app=WebAppInfo(url="https://earthwormxd.github.io/game-calendar-iframe/"))]
        ]
        await update.message.reply_text("–í–æ—Ç —Ç–≤–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å üëá", reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        keyboard = [
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–≤ –±—Ä–∞—É–∑–µ—Ä–µ)",
                                  url="https://earthwormxd.github.io/game-calendar-iframe/")]
        ]
        await update.message.reply_text("–û—Ç–∫—Ä–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ —Å—Å—ã–ª–∫–µ üëá", reply_markup=InlineKeyboardMarkup(keyboard))

# === /dice ===
async def roll_dice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    dice_type = query.data.split("_")[1]  # –Ω–∞–ø—Ä–∏–º–µ—Ä "d20"
    sides = int(dice_type)
    result = random.randint(1, sides)

    user = query.from_user
    chat_id = query.message.chat.id

    print(f"[LOG] {user.username or user.first_name} –±—Ä–æ—Å–∏–ª {dice_type} ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

    # –í–º–µ—Å—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await context.bot.send_message(
        chat_id=chat_id,
        text=f"üé≤ –ë—Ä–æ—à–µ–Ω {dice_type} ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π ===
async def handle_roll_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –ó–∞–∫—Ä—ã—Ç—å "—á–∞—Å–∏–∫–∏"

    data = query.data
    if data.startswith("roll_d"):
        dice_type = int(data.split("_")[1][1:])  # –ü—Ä–∏–º–µ—Ä: "roll_d20" ‚Üí 20
        result = random.randint(1, dice_type)
        await query.edit_message_text(f"üé≤ –ë—Ä–æ—Å–æ–∫ {dice_type}-–≥—Ä–∞–Ω–Ω–æ–≥–æ –∫—É–±–∞: *{result}*", parse_mode="Markdown")

# === –ö–æ–º–∞–Ω–¥—ã ===
async def set_commands(app):
    await app.bot.set_my_commands([
        BotCommand("date", "–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–µ—Å—Å–∏–π"),
        BotCommand("dice", "–ö—É–±—ã")
    ])

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
def main():
    app = ApplicationBuilder().token(TOKEN).post_init(set_commands).build()

    app.add_handler(CommandHandler("date", date))
    app.add_handler(CommandHandler("dice", dice))
    app.add_handler(CallbackQueryHandler(handle_roll_callback))

    app.run_polling()

if __name__ == '__main__':
    main()
