from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, WebAppInfo, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os
import random

TOKEN = os.getenv("BOT_TOKEN")

# === /date ===
async def date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.type == "private":
        keyboard = [
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å",
                                  web_app=WebAppInfo(url="https://earthwormxd.github.io/game-calendar-iframe/"))]
        ]
        await update.message.reply_text("–í–æ—Ç —Ç–≤–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å üëá", reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        keyboard = [
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–≤ –±—Ä–∞—É–∑–µ—Ä–µ)",
                                  url="https://earthwormxd.github.io/game-calendar-iframe/")]
        ]
        await update.message.reply_text("–û—Ç–∫—Ä–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ —Å—Å—ã–ª–∫–µ üëá", reply_markup=InlineKeyboardMarkup(keyboard))

# === /dice ===
async def dice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [InlineKeyboardButton("üé≤ d4", callback_data="roll_d4"),
         InlineKeyboardButton("üé≤ d6", callback_data="roll_d6")],
        [InlineKeyboardButton("üé≤ d8", callback_data="roll_d8"),
         InlineKeyboardButton("üé≤ d10", callback_data="roll_d10")],
        [InlineKeyboardButton("üé≤ d12", callback_data="roll_d12"),
         InlineKeyboardButton("üé≤ d20", callback_data="roll_d20")],
    ]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –∫—É–± –¥–ª—è –±—Ä–æ—Å–∫–∞:", reply_markup=InlineKeyboardMarkup(buttons))

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—Ä–æ—Å–∫–æ–≤ ===
async def handle_roll_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    if data.startswith("roll_d"):
        dice_type = int(data.split("_")[1][1:])  # d6 ‚Üí 6

        if dice_type == 6:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é Telegram
            await query.message.reply_dice(emoji="üé≤")
        else:
            result = random.randint(1, dice_type)
            await query.message.reply_text(f"üé≤ –ë—Ä–æ—Å–æ–∫ d{dice_type}: *{result}*", parse_mode="Markdown")

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ ===
async def set_commands(app):
    await app.bot.set_my_commands([
        BotCommand("date", "–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–µ—Å—Å–∏–π"),
        BotCommand("dice", "–ö—É–±—ã")
    ])

# === –ó–∞–ø—É—Å–∫ ===
def main():
    app = ApplicationBuilder().token(TOKEN).post_init(set_commands).build()

    app.add_handler(CommandHandler("date", date))
    app.add_handler(CommandHandler("dice", dice))
    app.add_handler(CallbackQueryHandler(handle_roll_callback))

    app.run_polling()

if __name__ == '__main__':
    main()
